// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Collection {
  id      String @id @default(uuid())
  name    String
  balance Int    @default(0)
  budget  Int    @default(0)
  userId  String
  User    User   @relation(fields: [userId], references: [id])

  @@unique([name, userId])
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  phone       String
  Collections Collection[]
  AuditLogs   AuditLog[]
  NotificationSchedule NotificationSchedule[]
  operations  Int         @default(0)
  lastOperationAt DateTime?
  key key[]
}

model key {
  id          String @unique
  permissions String[]
  createdAt   DateTime @default(now())
  deletedAt   DateTime?
  userId      String
  User        User     @relation(fields: [userId], references: [id])
}

model AuditLog {
  id          String @id @default(uuid())
  action      String
  objectId    String
  content     String
  userId      String
  createdAt   DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id])
}

model NotificationSchedule {
  id          String   @id @default(uuid())
  userId      String
  contactType String[] // email, sms, etc...
  frequency   String // daily, weekly, monthly
  User        User     @relation(fields: [userId], references: [id])
}
